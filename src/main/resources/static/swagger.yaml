openapi: 3.0.0
info:
  title: Account Service
  description: Backend-сервис и модель данных для создания банковских счетов и перевода денег между ними.
  contact:
    name: mrGreenNV
    email: averkievnv@gmail.com
    url: https://github.com/MrGreenNV
  version: 0.1.0

servers:
  - url: http://localhost:8585/
    description: Локальный  сервер для управления банковскими счетами.

components:

  schemas:
    AccountCreateDTO:
      description: Данные для создания банковского счета.
        Содержат в себе название создаваемого счета и пин код.
      type: object
      properties:
        accountName:
          type: string
          description: Название счета.
          example: account_1
        pin:
          type: string
          description: Пин код для доступа к счету.
          example: 1234

    AccountUpdateNameDTO:
      description: Данные для обновления названия банковского счета.
        Содержат в себе новое название счета и пин код для внесения изменений.
      type: object
      properties:
        updatedAccountName:
          type: string
          description: Новое название счета.
          example: new_account_name
        pin:
          type: string
          description: Пин код для внесения изменений.
          example: 1234

    AccountInfoDTO:
      description: Информация о банковском счете.
        Содержит данные о названии счета и текущем состоянии баланса.
      type: object
      properties:
        accountName:
          type: string
          description: Название счета.
          example: account_1
        accountBalance:
          type: number
          format: double
          example: 80000.0

    AccountDTO:
      description: Информация о банковском счете, включая идентификатор счета.
        Содержит данные о названии счета, идентификаторе и текущем состоянии баланса.
      type: object
      properties:
        id:
          type: number
          format: long
          description: Идентификатор банковского счета.
          example: 1
        accountName:
          type: string
          description: Название счета.
          example: account_1
        accountBalance:
          type: number
          format: double
          example: 80000.0

    AccountTransactionDTO:
      description: Данные для совершения операций с банковским счетом.
      type: object
      properties:
        sourceAccountName:
          type: string
          description: Название счета, на который происходит перевод средств.
          example: source_account
        transferAmount:
          type: number
          format: double
          description: Сумма транзакции.
          example: 80000.00
        pin:
          type: string
          description: Пин код для доступа к счету, с которого происходит операция.
          example: 1234

    ErrorResponse_ValidationException:
      description: Ответ сервера в случае возникновения ошибки.
      type: object
      properties:
        timestamp:
          type: string
          description: Временная метка, когда произошла ошибка. Формат = yyyy-MM-dd HH:mm:ss.
          example: 2023-09-20 12:12:50
        status:
          type: string
          description: HTTP статус ошибки.
          example: 422
        error:
          type: string
          description: Краткое описание ошибки.
          example: Unprocessable Entity
        errorMessage:
          type: string
          description: Сообщение об ошибке.
          example: Ошибки при валидации данных.
        path:
          type: string
          description: Путь к ресурсу, который вызвал ошибку.
          example: /api/accounts
        errors:
          type: object
          description: Список накопленных ошибок при валидации данных.
          example: Пин-код должен состоять из четырех цифр.

    ErrorResponse_CreatedException:
      description: Ответ сервера в случае возникновения ошибки.
      type: object
      properties:
        timestamp:
          type: string
          description: Временная метка, когда произошла ошибка. Формат = yyyy-MM-dd HH:mm:ss.
          example: 2023-09-20 12:12:50
        status:
          type: string
          description: HTTP статус ошибки.
          example: 400
        error:
          type: string
          description: Краткое описание ошибки.
          example: Bad Request
        errorMessage:
          type: string
          description: Сообщение об ошибке.
          example: Ошибка при создании банковского счета. Название счета не может быть пустым.
        path:
          type: string
          description: Путь к ресурсу, который вызвал ошибку.
          example: /api/accounts
        errors:
          type: object
          example: null

    ErrorResponse_NotFoundException:
      description: Ответ сервера в случае возникновения ошибки.
      type: object
      properties:
        timestamp:
          type: string
          description: Временная метка, когда произошла ошибка. Формат = yyyy-MM-dd HH:mm:ss.
          example: 2023-09-20 12:12:50
        status:
          type: string
          description: HTTP статус ошибки.
          example: 404
        error:
          type: string
          description: Краткое описание ошибки.
          example: Not Found
        errorMessage:
          type: string
          description: Сообщение об ошибке.
          example: Счет с идентификатором(названием) 1(account_name) не найден.
        path:
          type: string
          description: Путь к ресурсу, который вызвал ошибку.
          example: /api/accounts
        errors:
          type: object
          example: null

    ErrorResponse_WithdrawException:
      description: Ответ сервера в случае возникновения ошибки.
      type: object
      properties:
        timestamp:
          type: string
          description: Временная метка, когда произошла ошибка. Формат = yyyy-MM-dd HH:mm:ss.
          example: 2023-09-20 12:12:50
        status:
          type: string
          description: HTTP статус ошибки.
          example: 400
        error:
          type: string
          description: Краткое описание ошибки.
          example: Bad Request
        errorMessage:
          type: string
          description: Сообщение об ошибке.
          example: Сумма перевода должна быть положительной и не может быть пустой.
        path:
          type: string
          description: Путь к ресурсу, который вызвал ошибку.
          example: /api/accounts
        errors:
          type: object
          example: null

    ErrorResponse_AccessException:
      description: Ответ сервера в случае возникновения ошибки.
      type: object
      properties:
        timestamp:
          type: string
          description: Временная метка, когда произошла ошибка. Формат = yyyy-MM-dd HH:mm:ss.
          example: 2023-09-20 12:12:50
        status:
          type: string
          description: HTTP статус ошибки.
          example: 403
        error:
          type: string
          description: Краткое описание ошибки.
          example: Forbidden
        errorMessage:
          type: string
          description: Сообщение об ошибке.
          example: Введен неверный пин код.
        path:
          type: string
          description: Путь к ресурсу, который вызвал ошибку.
          example: /api/accounts
        errors:
          type: object
          example: null

    ErrorResponse_NameAlreadyExistsException:
      description: Ответ сервера в случае возникновения ошибки.
      type: object
      properties:
        timestamp:
          type: string
          description: Временная метка, когда произошла ошибка. Формат = yyyy-MM-dd HH:mm:ss.
          example: 2023-09-20 12:12:50
        status:
          type: string
          description: HTTP статус ошибки.
          example: 400
        error:
          type: string
          description: Краткое описание ошибки.
          example: Bad Request
        errorMessage:
          type: string
          description: Сообщение об ошибке.
          example: Ошибка при обновлении банковского счета. Название счета account_name уже используется.
        path:
          type: string
          description: Путь к ресурсу, который вызвал ошибку.
          example: /api/accounts
        errors:
          type: object
          example: null

    ErrorResponse_OthersException:
      description: Ответ сервера в случае возникновения ошибки.
      type: object
      properties:
        timestamp:
          type: string
          description: Временная метка, когда произошла ошибка. Формат = yyyy-MM-dd HH:mm:ss.
          example: 2023-09-20 12:12:50
        status:
          type: string
          description: HTTP статус ошибки.
          example: 400
        error:
          type: string
          description: Краткое описание ошибки.
          example: Bad Request
        errorMessage:
          type: string
          description: Сообщение об ошибке.
        path:
          type: string
          description: Путь к ресурсу, который вызвал ошибку.
          example: /api/accounts
        errors:
          type: object
          example: null

paths:

  /api/accounts:
    post:
      tags:
        - AccountsController
      summary: Создание банковского счета.
      description: Принимает от пользователя данные для создания нового счета и сохранения в базу данных.
      requestBody:
        required: true
        description: Данные для создания банковского счета.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateDTO'
      responses:
        '200':
          description: Банковский счет успешно создан.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfoDTO'
        '400':
          description: Банковский счет с данным названием уже существует.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse_CreatedException'
        '422':
          description: Ошибка при валидации данных.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse_ValidationException'

    get:
      tags:
        - AccountsController
      summary: Возвращает список банковских счетов.
      description: Возвращает список всех классификаторов, сохранённых в базе данных
      parameters:
        - in: path
          name: page
          schema:
            type: integer
            required: false
            description: Номер отображаемой страницы.
            example: 1
        - in: path
          name: pageSize
          schema:
            type: integer
            required: false
            description: Количество отображаемых элементов на странице.
            example: 10
      responses:
        '200':
          description: Список всех счетов.
            Каждый объект списка содержит информацию о названии счета и его балансе.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountInfoDTO'

  /api/accounts/{accountId}:
    put:
      tags:
        - AccountsController
      summary: Обновление названия банковского счета.
      description: Принимает от пользователя данные для обновления названия банковского счета
        и сохранения в базу данных.
      parameters:
        - in: path
          name: accountId
          schema:
            type: integer
          required: true
          description: Идентификатор банковского счета.
      requestBody:
        required: true
        description: Данные для обновления названия счета.
          Содержат новое название и пин код для подтверждения операции обновления.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateNameDTO'
      responses:
        '200':
          description: Название счета успешно обновлено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfoDTO'
        '400':
          description: Ошибка при попытке присвоить уже использующееся название счета.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse_NameAlreadyExistsException'
        '403':
          description: Ошибка при сравнении введенного пароля с сохранённым.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse_AccessException'
        '404':
          description: Ошибка при поиске обновляемого счета.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse_NotFoundException'

    get:
      tags:
        - AccountsController
      summary: Данные банковского счета.
      description: Принимает от пользователя идентификатор и возвращает данные банковского счета.
      parameters:
        - in: path
          name: accountId
          schema:
            type: integer
          required: true
          description: Идентификатор банковского счета.
      responses:
        '200':
          description: Данные банковского счета успешно получены.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
        '404':
          description: Ошибка при поиске запрашиваемого счета.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse_NotFoundException'

    delete:
      tags:
        - AccountsController
      summary: Удаление банковского счета.
      description: Принимает от пользователя идентификатор банковского счета, который необходимо удалить.
      parameters:
        - in: path
          name: accountId
          schema:
            type: integer
          required: true
          description: Идентификатор банковского счета.
      responses:
        '200':
          description: Банковский счет успешно удален.
        '404':
          description: Ошибка при поиске запрашиваемого счета.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse_NotFoundException'

  /api/accounts/{accountId}/soft:
    post:
      tags:
        - AccountsController
      summary: Деактивация банковского счета.
      description: Принимает от пользователя идентификатор банковского счета, который необходимо деактивировать.
        Изменяет статус счета на удаленный.
      parameters:
        - in: path
          name: classifierId
          schema:
            type: integer
          required: true
          description: Идентификатор банковского счета.
      responses:
        '200':
          description: Банковский счет успешно деактивирован.
        '404':
          description: Ошибка при поиске запрашиваемого счета.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse_NotFoundException'

  /api/accounts/{accountId}/deposit:
    post:
      tags:
        - AccountsController
      summary: Пополнение банковского счета.
      description: Принимает от пользователя данные для пополнения банковского счета.
        Увеличивает баланс на сумму пополнения.
      parameters:
        - in: path
          name: classifierId
          schema:
            type: integer
          required: true
          description: Идентификатор пополняемого банковского счета.
      requestBody:
        required: true
        description: Данные для осуществления транзакции.
        content:
          application/json:
            schema:
              description: Данные для совершения операций с банковским счетом.
              type: object
              properties:
                sourceAccountName:
                  required: false
                  type: string
                  description: Название счета, на который происходит перевод средств. (Не требуется)
                  example: null
                transferAmount:
                  required: true
                  type: number
                  format: double
                  description: Сумма транзакции.
                  example: 80000.00
                pin:
                  required: false
                  type: string
                  description: Пин код для доступа к счету, с которого происходит операция. (Не требуется)
                  example: null
      responses:
        '200':
          description: Счет успешно пополнен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfoDTO'
        '400':
          description: Ошибка связанная с суммой пополнения.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse_WithdrawException'
        '404':
          description: Ошибка при поиске счета.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse_NotFoundException'

  /api/accounts/{accountId}/withdraw:
    post:
      tags:
        - AccountsController
      summary: Списание средств с банковского счета.
      description: Принимает от пользователя данные для списания с банковского счета.
        Уменьшает баланс на сумму пополнения.
      parameters:
        - in: path
          name: classifierId
          schema:
            type: integer
          required: true
          description: Идентификатор банковского счета, с которого производится списание.
      requestBody:
        required: true
        description: Данные для осуществления транзакции.
        content:
          application/json:
            schema:
              description: Данные для совершения операций с банковским счетом.
              type: object
              properties:
                sourceAccountName:
                  required: false
                  type: string
                  description: Название счета, на который происходит перевод средств. (Не требуется)
                  example: null
                transferAmount:
                  required: true
                  type: number
                  format: double
                  description: Сумма транзакции.
                  example: 80000.00
                pin:
                  required: true
                  type: string
                  description: Пин код для доступа к счету, с которого происходит операция.
                  example: 1234
      responses:
        '200':
          description: Снятие со счета успешно произошло.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfoDTO'
        '400':
          description: Ошибка связанная с суммой пополнения.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse_WithdrawException'
        '403':
          description: Ошибка при сравнении введенного пароля с сохранённым.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse_AccessException'
        '404':
          description: Ошибка при поиске счета.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse_NotFoundException'

  /api/accounts/{accountId}/transfer:
    post:
      tags:
        - AccountsController
      summary: Перевод средств между банковскими счетами.
      description: Принимает от пользователя данные для списания с банковского счета.
        Уменьшает баланс счета, с которого осуществляется перевод и увеличивает баланс счета,
        на который перевод осуществляется.
      parameters:
        - in: path
          name: classifierId
          schema:
            type: integer
          required: true
          description: Идентификатор банковского счета, с которого осуществляется перевод.
      requestBody:
        required: true
        description: Данные для осуществления транзакции.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountTransactionDTO'
      responses:
        '200':
          description: Перевод между счетами успешно осуществлен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfoDTO'
        '400':
          description: Ошибка связанная с суммой пополнения.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse_WithdrawException'
        '403':
          description: Ошибка при сравнении введенного пароля с сохранённым.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse_AccessException'
        '404':
          description: Ошибка при поиске счета.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse_NotFoundException'